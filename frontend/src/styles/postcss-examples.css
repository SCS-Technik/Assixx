/* ðŸš€ PostCSS Modern Features - Beispiele fÃ¼r Assixx */

/* ========================================
   1. CSS NESTING - Verschachtelte Selektoren
   ======================================== */

/* VORHER - Ohne Nesting */
/*
.card {
  background: var(--glass-bg);
}
.card .card-header {
  padding: var(--spacing-md);
}
.card .card-header h3 {
  margin: 0;
}
.card:hover {
  background: var(--glass-bg-hover);
}
*/

/* NACHHER - Mit Nesting */
.card {
  border-radius: var(--radius-md);
  background: var(--glass-bg);

  & .card-header {
    padding: var(--spacing-md);
    border-bottom: var(--glass-border);

    & h3 {
      margin: 0;
      color: var(--text-primary);
    }
  }

  & .card-body {
    padding: var(--spacing-lg);
  }

  &:hover {
    transform: translateY(-2px);
    background: var(--glass-bg-hover);
  }

  &.card--active {
    background: var(--glass-bg-active);
    box-shadow: 0 0 0 2px var(--primary-color);
  }
}

/* ========================================
   2. CUSTOM MEDIA QUERIES - Wiederverwendbare Breakpoints
   ======================================== */

/* Definiere Breakpoints einmal */
@custom-media --mobile (width <= 768px);
@custom-media --tablet (768px < width <= 1024px);
@custom-media --desktop (width > 1024px);
@custom-media --large-desktop (width > 1440px);

/* Nutze sie Ã¼berall */
.sidebar {
  width: 280px;

  @media (--mobile) {
    position: fixed;
    transform: translateX(-100%);
    width: 100%;

    &.sidebar--open {
      transform: translateX(0);
    }
  }

  @media (--desktop) {
    width: 320px;
  }

  @media (--large-desktop) {
    width: 360px;
  }
}

/* ========================================
   3. :HAS() SELECTOR - Parent basierend auf Children stylen
   ======================================== */

/* Form wird rot wenn sie einen Error enthÃ¤lt */
.form:has(.error) {
  border: 2px solid var(--error-color);
  background: rgb(244 67 54 / 5%);

  & .form-header {
    color: var(--error-color);
  }
}

/* Blackboard Entry mit gepinntem Item */
.blackboard-list:has(.entry--pinned) {
  padding-top: calc(var(--spacing-xl) * 2);

  & .entry--pinned {
    position: absolute;
    top: 0;
    border: 1px solid var(--accent-glow);
    background: var(--accent-gradient);
  }
}

/* Button disabled wenn Form invalid */
.form:has(input:invalid) {
  & button[type="submit"] {
    pointer-events: none;
    cursor: not-allowed;
    opacity: 50%;
  }
}

/* ========================================
   4. LOGICAL PROPERTIES - FÃ¼r RTL/LTR Support
   ======================================== */

.notification {
  /* Statt margin-left/margin-right */
  margin-inline: var(--spacing-md) var(--spacing-lg); /* left in LTR, right in RTL */ /* right in LTR, left in RTL */

  /* Statt padding-left/padding-right */
  padding-inline: var(--spacing-md);

  /* Statt border-left */
  border-inline-start: 4px solid var(--primary-color);

  /* Statt text-align: left */
  text-align: start;
}

/* ========================================
   5. :IS() und :WHERE() - Gruppierte Selektoren
   ======================================== */

/* Alle Buttons in Forms, Modals oder Cards */
:is(.form, .modal, .card) button {
  min-width: 100px;
  padding: var(--spacing-sm) var(--spacing-md);
}

/* Headers in verschiedenen Contexten - ohne SpezifitÃ¤t */
:where(article, section, aside) h2 {
  margin-top: var(--spacing-xl);
  margin-bottom: var(--spacing-md);
}

/* ========================================
   6. MODERNE COLOR SYNTAX
   ======================================== */

.glass-card {
  border: 1px solid rgb(255 255 255 / 10%);

  /* Mit CSS Variables */
  color: hsl(var(--primary-hsl) / 80%);

  /* Neue Syntax ohne Kommas */
  background: rgb(255 255 255 / 2%);
  box-shadow:
    0 4px 6px rgb(0 0 0 / 10%),
    0 1px 3px rgb(0 0 0 / 8%);
}

/* ========================================
   7. CLAMP() fÃ¼r Responsive Typography
   ======================================== */

.hero-title {
  margin-bottom: clamp(1rem, 2vw, 2rem);

  /* Automatisch responsive zwischen min und max */
  font-size: clamp(1.5rem, 4vw, 3rem);
  line-height: clamp(1.8rem, 5vw, 3.6rem);
}

/* ========================================
   8. GAP fÃ¼r Flexbox (frÃ¼her nur Grid)
   ======================================== */

.button-group {
  display: flex;
  gap: var(--spacing-md); /* Funktioniert jetzt auch in Flexbox! */

  @media (--mobile) {
    flex-direction: column;
    gap: var(--spacing-sm);
  }
}

/* ========================================
   9. ASPECT-RATIO Property
   ======================================== */

.video-container {
  overflow: hidden;
  aspect-ratio: 16 / 9;
  border-radius: var(--radius-md);
  background: var(--background-dark);

  & video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

/* ========================================
   10. @LAYER fÃ¼r CSS Organisation
   ======================================== */

@layer reset {
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
}

@layer base {
  body {
    font-family: var(--font-family);
    color: var(--text-primary);
    background: var(--background-dark);
  }
}

@layer components {
  .button {
    /* Component styles */
  }
}

@layer utilities {
  .u-hidden {
    display: none !important;
  }
}

/* ========================================
   REAL-WORLD EXAMPLE: Navigation Refactored
   ======================================== */

.unified-nav {
  background: var(--glass-bg);
  backdrop-filter: blur(20px);

  & .nav-list {
    display: flex;
    gap: var(--spacing-sm);
    list-style: none;

    @media (--mobile) {
      flex-direction: column;
      gap: 0;
    }
  }

  & .nav-item {
    position: relative;

    & a {
      display: block;

      padding: var(--spacing-sm) var(--spacing-md);

      color: var(--text-secondary);
      text-decoration: none;

      transition: all 0.2s;

      &:hover,
      &:focus-visible {
        color: var(--text-primary);
        background: var(--glass-bg-hover);
      }
    }

    &.nav-item--active a {
      color: var(--primary-color);
      background: var(--glass-bg-active);

      &::after {
        content: "";

        position: absolute;
        right: 0;
        bottom: 0;
        left: 0;

        height: 2px;

        background: var(--primary-color);
      }
    }

    /* Dropdown Menu mit :has() */
    &:has(.dropdown) {
      & > a::after {
        content: "â–¼";
        margin-inline-start: var(--spacing-xs);
        font-size: 0.8em;
      }
    }

    & .dropdown {
      position: absolute;
      top: 100%;
      left: 0;
      transform: translateY(-10px);

      min-width: 200px;
      border: var(--glass-border);
      border-radius: var(--radius-sm);

      visibility: hidden;
      opacity: 0%;
      background: var(--glass-bg);

      transition: all 0.3s;

      @media (--mobile) {
        position: static;
        transform: none;
        visibility: visible;
        opacity: 100%;
      }
    }

    &:hover .dropdown,
    &:focus-within .dropdown {
      transform: translateY(0);
      visibility: visible;
      opacity: 100%;
    }
  }
}

/* ========================================
   AUTO-DARK MODE mit prefers-color-scheme
   ======================================== */

@media (prefers-color-scheme: light) {
  :root {
    --background-dark: #f5f5f5;
    --text-primary: #1b1b1b;
    --text-secondary: #666;
    --glass-bg: rgb(0 0 0 / 2%);
  }
}

/* ========================================
   Hinweis: Diese Features werden von PostCSS zu normalem CSS kompiliert,
   das in allen Browsern funktioniert!
   ======================================== */
