name: Code Quality Checks

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  unit-tests-minimal:
    runs-on: ubuntu-latest
    name: Unit Tests (2 tests, no DB)
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.13.1

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Run Basic Unit Tests Only
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-github-actions
          NODE_OPTIONS: --experimental-vm-modules
        run: |
          cd backend
          echo "Running basic unit tests that don't require database..."

          # NUR echte Unit Tests OHNE DB oder Mocks!
          UNIT_TESTS=(
            "src/utils/__tests__/errorHandler.test.ts"
            "src/routes/__tests__/health.test.ts"
          )

          # FÃ¼hre jeden Test einzeln aus mit ESM Support
          for test in "${UNIT_TESTS[@]}"; do
            echo "Testing: $test"
            pnpm jest -c ../jest.config.js "$test" --passWithNoTests || exit 1
          done

  linting-and-formatting:
    runs-on: ubuntu-latest
    name: Linting & Formatting (ESLint, Prettier, TypeScript)
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.13.1

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Run TypeScript check
        run: |
          cd backend
          pnpm run typecheck

      - name: Run ESLint
        run: |
          cd backend
          pnpm run lint

      - name: Check formatting
        run: |
          cd backend
          pnpm run prettier

  docker-build-verification:
    runs-on: ubuntu-latest
    name: Docker Build Verification (no push)
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Docker Image
        run: |
          cd docker
          docker build -f Dockerfile -t assixx-backend-test:latest ..

      - name: Test Docker Compose Config
        run: |
          cd docker
          docker compose config
