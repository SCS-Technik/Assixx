version: '3.8'

# Monitoring Stack f√ºr Assixx
# Verwendung: docker-compose -f docker-compose.yml -f docker-compose.monitoring.yml up -d

services:
  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: assixx-prometheus
    restart: unless-stopped
    user: 'nobody'
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./infrastructure/monitoring/alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - assixx-network

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: assixx-grafana
    restart: unless-stopped
    user: '472'
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - '3001:3000'
    depends_on:
      - prometheus
      - loki
    networks:
      - assixx-network

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: assixx-loki
    restart: unless-stopped
    user: '10001'
    volumes:
      - ./infrastructure/monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - '3100:3100'
    networks:
      - assixx-network

  # Promtail - Log Shipper
  promtail:
    image: grafana/promtail:2.9.0
    container_name: assixx-promtail
    restart: unless-stopped
    volumes:
      - ./infrastructure/monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./backend/logs:/var/log/assixx:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - assixx-network

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: assixx-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - '9100:9100'
    networks:
      - assixx-network

  # MySQL Exporter - Database Metrics
  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: assixx-mysql-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: 'exporter:exporterpass@(mysql:3306)/'
    ports:
      - '9104:9104'
    depends_on:
      - mysql
    networks:
      - assixx-network

  # AlertManager - Alert Handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: assixx-alertmanager
    restart: unless-stopped
    volumes:
      - ./infrastructure/monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - '9093:9093'
    networks:
      - assixx-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  alertmanager_data:
    driver: local
